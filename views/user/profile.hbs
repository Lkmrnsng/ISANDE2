<div class="account-container">
    <div class="profile-header">
        <h1>My Account</h1>
        <p class="subtitle">Manage your profile and settings</p>
    </div>

    <div class="profile-section">
        <div class="section-header">
            <h2>Account Information</h2>
            <button class="edit-button" id="editProfileBtn">Edit</button>
        </div>
        
        <div class="profile-info">
            <div class="info-group">
                <label>Name</label>
                <p id="displayName">{{user.name}}</p>
            </div>
            <div class="info-group">
                <label>Email</label>
                <p id="displayEmail">{{user.email}}</p>
            </div>
            <div class="info-group">
                <label>Phone Number</label>
                <p id="displayPhone">{{user.phone}}</p>
            </div>
            {{#if user.restaurantName}}
            <div class="info-group">
                <label>Restaurant Name</label>
                <p id="displayRestaurant">{{user.restaurantName}}</p>
            </div>
            {{/if}}
        </div>

        <!-- Edit Profile Form (Initially Hidden) -->
        <form id="editProfileForm" class="edit-form hidden">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" value="{{user.name}}" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" value="{{user.email}}" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="phone" value="{{user.phone}}" required>
            </div>
            {{#if user.restaurantName}}
            <div class="form-group">
                <label for="restaurantName">Restaurant Name</label>
                <input type="text" id="restaurantName" name="restaurantName" value="{{user.restaurantName}}">
            </div>
            {{/if}}
            <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <input type="password" id="currentPassword" name="currentPassword">
                <small>Required only if changing password</small>
            </div>
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <input type="password" id="newPassword" name="newPassword">
                <small>Leave blank to keep current password</small>
            </div>
            <div class="form-actions">
                <button type="button" class="cancel-btn" id="cancelEditBtn">Cancel</button>
                <button type="submit" class="save-btn">Save Changes</button>
            </div>
        </form>
    </div>


        <div class="danger-actions">
            <button id="deleteAccountBtn" class="delete-btn">Delete Account</button>
        </div>


    <!-- Delete Account Modal -->
    <div id="deleteModal" class="modal hidden">
        <div class="modal-content">
            <h2>Delete Account</h2>
            <p>This action cannot be undone. Please enter your password to confirm.</p>
            <form id="deleteAccountForm">
                <div class="form-group">
                    <label for="deletePassword">Password</label>
                    <input type="password" id="deletePassword" name="password" required>
                </div>
                <div class="modal-actions">
                    <button type="button" class="cancel-btn" id="cancelDeleteBtn">Cancel</button>
                    <button type="submit" class="delete-btn">Delete Account</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Cache DOM elements
    const editProfileBtn = document.getElementById('editProfileBtn');
    const editProfileForm = document.getElementById('editProfileForm');
    const cancelEditBtn = document.getElementById('cancelEditBtn');
    const deleteAccountBtn = document.getElementById('deleteAccountBtn');
    const deleteModal = document.getElementById('deleteModal');
    const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
    const profileInfo = document.querySelector('.profile-info');

    // Show/Hide Edit Form
    editProfileBtn.addEventListener('click', () => {
        editProfileForm.classList.remove('hidden');
        profileInfo.classList.add('hidden');
    });

    cancelEditBtn.addEventListener('click', () => {
        editProfileForm.classList.add('hidden');
        profileInfo.classList.remove('hidden');
        editProfileForm.reset();
    });

    // Handle Profile Update
    editProfileForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = {
            name: editProfileForm.name.value,
            email: editProfileForm.email.value,
            phone: editProfileForm.phone.value,
            restaurantName: editProfileForm.restaurantName?.value,
            currentPassword: editProfileForm.currentPassword.value,
            newPassword: editProfileForm.newPassword.value
        };

        try {
            const response = await fetch('/user/profile', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            const data = await response.json();
            
            if (data.success) {
                // Update displayed info
                document.getElementById('displayName').textContent = formData.name;
                document.getElementById('displayEmail').textContent = formData.email;
                document.getElementById('displayPhone').textContent = formData.phone;
                if (formData.restaurantName) {
                    document.getElementById('displayRestaurant').textContent = formData.restaurantName;
                }

                // Reset form and hide it
                editProfileForm.reset();
                editProfileForm.classList.add('hidden');
                profileInfo.classList.remove('hidden');

                alert('Profile updated successfully');
            } else {
                alert(data.message || 'Error updating profile');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Error updating profile');
        }
    });

    // Delete Account Modal
    deleteAccountBtn.addEventListener('click', () => {
        deleteModal.classList.remove('hidden');
    });

    cancelDeleteBtn.addEventListener('click', () => {
        deleteModal.classList.add('hidden');
        document.getElementById('deleteAccountForm').reset();
    });

    // Handle Account Deletion
    document.getElementById('deleteAccountForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        if (!confirm('Are you absolutely sure you want to delete your account? This action cannot be undone.')) {
            return;
        }

        try {
            const response = await fetch('/user/profile', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: document.getElementById('deletePassword').value
                })
            });

            const data = await response.json();
            
            if (data.success) {
                alert('Account deleted successfully');
                window.location.href = '/';
            } else {
                alert(data.message || 'Error deleting account');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Error deleting account');
        }
    });
});
</script>