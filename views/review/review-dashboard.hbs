<div class="dashboard-container" style="margin-left: 220px;">
    <!-- Header Section -->
    <div class="dashboard-header">
        <h1>All Reviews</h1>
        <div class="overview-stats">
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageOverall 1}}</div>
                <div class="stat-label">Average Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{averageRatings.totalReviews}}</div>
                <div class="stat-label">Total Reviews</div>
            </div>
        </div>
        
        <div class="overview-substats">
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageCustomerService 1}}</div>
                <div class="stat-label">Average Customer Service Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageDelivery 1}}</div>
                <div class="stat-label">Average Delivery Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageFreshness 1}}</div>
                <div class="stat-label">Average Freshness Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageQuality 1}}</div>
                <div class="stat-label">Average Quality Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averagePrice 1}}</div>
                <div class="stat-label">Average Price Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averagePackaging 1}}</div>
                <div class="stat-label">Average Packaging Rating</div>
            </div>
            <div class="stat-card"> 
                <div class="stat-value">{{formatNumber averageRatings.averageConvenience 1}}</div>
                <div class="stat-label">Average Convenience Rating</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">{{formatNumber averageRatings.averageCustomization 1}}</div>
                <div class="stat-label">Average Customization Rating</div>
            </div>
        </div>
    </div>

<div class="filters-section">
    <h3>Filter Feedback By</h3>
    <div class="filter-tags">
        <button class="filter-tag {{#if (eq activeFilters.category 'High Ratings')}}active{{/if}}" 
                data-category="High Ratings">
            High Ratings (4★ & above)
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Low Ratings')}}active{{/if}}" 
                data-category="Low Ratings">
            Low Ratings (2★ & below)
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Customer Service')}}active{{/if}}" 
                data-category="Customer Service">
            Customer Service
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Delivery')}}active{{/if}}" 
                data-category="Delivery">
            Delivery
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Freshness')}}active{{/if}}" 
                data-category="Freshness">
            Freshness
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Quality')}}active{{/if}}" 
                data-category="Quality">
            Quality
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Price')}}active{{/if}}" 
                data-category="Price">
            Price
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Packaging')}}active{{/if}}" 
                data-category="Packaging">
            Packaging
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Convenience')}}active{{/if}}" 
                data-category="Convenience">
            Convenience
        </button>
        <button class="filter-tag {{#if (eq activeFilters.category 'Customization')}}active{{/if}}" 
                data-category="Customization">
            Customization
        </button>
    </div>

    <div class="advanced-filters">
        <div class="filter-group">
            <label for="ratingFilter">Rating</label>
            <select id="ratingFilter" name="rating" class="filter-select">
                <option value="">All Ratings</option>
                <option value="4" {{#if (eq activeFilters.rating "4")}}selected{{/if}}>4★ & above</option>
                <option value="3" {{#if (eq activeFilters.rating "3")}}selected{{/if}}>3★ & above</option>
                <option value="2" {{#if (eq activeFilters.rating "2")}}selected{{/if}}>2★ & above</option>
                <option value="1" {{#if (eq activeFilters.rating "1")}}selected{{/if}}>1★ & above</option>
            </select>
        </div>

        <div class="filter-group date-filter-group">
            <label>Date Range</label>
            <div class="date-inputs">
                <div class="date-input-wrapper">
                    <input type="date" 
                           id="startDate" 
                           name="startDate" 
                           class="date-input"
                           value="{{activeFilters.startDate}}">
                </div>
                <span class="date-separator">to</span>
                <div class="date-input-wrapper">
                    <input type="date" 
                           id="endDate" 
                           name="endDate" 
                           class="date-input"
                           value="{{activeFilters.endDate}}">
                </div>
            </div>
        </div>

        <div class="filter-actions">
            <button id="applyFilters" class="apply-filters-btn submit-btn">Apply Filters</button>
            <button id="clearFilters" class="clear-filters-btn cancel-btn">Clear Filters</button>
        </div>
    </div>
</div>

    <!-- Reviews List -->
    <div class="reviews-list">
        {{#each reviews}}
        <div class="review-card">
            <div class="review-header">
                <div class="review-meta">
                    <span class="review-id">Review #{{this.reviewID}}</span>
                    <span class="review-date">{{formatDate this.date}}</span>
                </div>
                <div class="review-rating">
                    <span class="stars">
                        {{#times this.ratings.overall}}★{{/times}}
                    </span>
                    <span class="rating-value">{{this.ratings.overall}}</span>
                </div>
            </div>

            <div class="review-content">
                <p class="review-text">{{this.comment}}</p>
                
                {{#if this.ratings}}
                <div class="detailed-ratings">
                    {{#each this.ratings}}
                        {{#if (ne @key "overall")}}
                            {{#if this}}
                            <div class="rating-item">
                                <span class="rating-label">{{@key}}</span>
                                <span class="rating-stars">
                                    {{#times this}}★{{/times}}
                                </span>
                            </div>
                            {{/if}}
                        {{/if}}
                    {{/each}}
                </div>
                {{/if}}

                {{#if this.tags.length}}
                <div class="review-tags">
                    {{#each this.tags}}
                    <span class="tag">{{this}}</span>
                    {{/each}}
                </div>
                {{/if}}
            </div>

            {{#if this.response}}
                <div class="review-response">
                    <p class="response-text">{{this.response.text}}</p>
                    <div class="response-meta">
                        <span>Responded on {{formatDate this.response.responseDate}}</span>
                    </div>
                </div>
            {{else}}
                {{#if ../isSalesTeam}}
                    <div class="review-actions">
                        <button class="respond-btn submit-btn" data-review-id="{{this.reviewID}}">
                            Respond
                        </button>
                    </div>
                {{/if}}
            {{/if}}

        </div>
        {{/each}}
    </div>

    {{#if isCustomer}}
    <div class="reviews-footer"><a href="/review/my-reviews" class="button-link"> Back to My Reviews </a> </div>
    {{/if}}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Filter functionality
    const filterTags = document.querySelectorAll('.filter-tag');
    const ratingFilter = document.getElementById('ratingFilter');
    const startDate = document.getElementById('startDate');
    const endDate = document.getElementById('endDate');
    const applyFilters = document.getElementById('applyFilters');
    const clearFilters = document.getElementById('clearFilters');

    // Set max date for date inputs to today
    const today = new Date().toISOString().split('T')[0];
    startDate.max = today;
    endDate.max = today;

    // Handle date input changes
    startDate.addEventListener('change', function() {
        if (this.value && endDate.value && this.value > endDate.value) {
            endDate.value = this.value;
        }
        endDate.min = this.value;
    });

    endDate.addEventListener('change', function() {
        if (this.value && startDate.value && this.value < startDate.value) {
            startDate.value = this.value;
        }
        startDate.max = this.value;
    });

    // Filter tags click handler - only one active at a time
    filterTags.forEach(tag => {
        tag.addEventListener('click', () => {
            // If clicking already active tag, deactivate it
            if (tag.classList.contains('active')) {
                tag.classList.remove('active');
            } else {
                // Remove active class from all other tags
                filterTags.forEach(t => t.classList.remove('active'));
                // Add active class to clicked tag
                tag.classList.add('active');
            }
        });
    });

    // Apply filters
    applyFilters.addEventListener('click', () => {
        const params = new URLSearchParams();

        // Get the active category filter
        const activeTag = document.querySelector('.filter-tag.active');
        if (activeTag) {
            params.set('category', activeTag.dataset.category);
        }

        // Rating filter
        if (ratingFilter.value) {
            params.set('rating', ratingFilter.value);
        }

        // Date range
        if (startDate.value) {
            params.set('startDate', startDate.value);
        }
        if (endDate.value) {
            params.set('endDate', endDate.value);
        }

        // Get current page number if it exists in URL
        const currentPage = new URLSearchParams(window.location.search).get('page');
        if (currentPage) {
            params.set('page', '1'); // Reset to page 1 when applying new filters
        }

        // Update URL and reload
        window.location.href = `${window.location.pathname}?${params.toString()}`;
    });

    // Clear filters
    clearFilters.addEventListener('click', () => {
        filterTags.forEach(tag => tag.classList.remove('active'));
        ratingFilter.value = '';
        startDate.value = '';
        endDate.value = '';
        window.location.href = window.location.pathname;
    });

    // Debug logging
    console.log('Active filters:', {
        category: new URLSearchParams(window.location.search).get('category'),
        rating: new URLSearchParams(window.location.search).get('rating'),
        startDate: new URLSearchParams(window.location.search).get('startDate'),
        endDate: new URLSearchParams(window.location.search).get('endDate')
    });

    // Response modal functionality
    const respondButtons = document.querySelectorAll('.respond-btn');
    respondButtons.forEach(button => {
        button.addEventListener('click', () => {
            const reviewId = button.dataset.reviewId;
            showResponseModal(reviewId);
        });
    });
});

function showResponseModal(reviewId) {
    const modal = document.createElement('div');
    modal.className = 'response-modal';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>Respond to Review #${reviewId}</h3>
            <textarea id="responseText" placeholder="Type your response..."></textarea>
            <div class="modal-actions">
                <button class="cancel-btn">Cancel</button>
                <button class="submit-btn">Submit Response</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);

    const cancelBtn = modal.querySelector('.cancel-btn');
    const submitBtn = modal.querySelector('.submit-btn');
    const textarea = modal.querySelector('#responseText');

    cancelBtn.addEventListener('click', () => modal.remove());

    submitBtn.addEventListener('click', async () => {
        const response = textarea.value.trim();
        if (!response) {
            alert('Please enter a response');
            return;
        }

        try {
            const res = await fetch(`/review/${reviewId}/respond`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ response })
            });

            if (!res.ok) throw new Error('Failed to submit response');
            window.location.reload();
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to submit response. Please try again.');
        }
    });

    modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.remove();
    });
}
</script>