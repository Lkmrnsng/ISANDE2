<div class="dashboard-container">
    <div class="sidebar">
        <h2>Main Menu</h2>
        <ul>
            <li><a href="dashboard" class="active">My Requests</a></li>
            <li><a href="orders">My Orders</a></li>
            <li><a href="/chats">Chats</a></li>
            <li><a href="/cancel-order">Cancel Orders</a></li>
            <li><a href="/account">Account</a></li>
        </ul>
    </div>

    {{#if (eq (length requests) 0)}}
        <p>You have no requests at the moment</p>
    {{else}}

    
    <div class="main-content">
        <div class="header-section">
            <h1>Track Your Requests</h1>
            <p class="subtitle"><i class="info-icon">ℹ</i> Some requests are under review, click the request to view more details</p>
        </div>

        <div class="requests-list">
            {{#each requests}}
            <div class="request-row" data-request-id="{{this.requestID}}">
                <div class="request-summary">
                    <span class="request-id">Request ID: {{this.requestID}}</span>
                    <span class="request-status">Status: {{this.status}}</span>
                    <span class="request-date">Request Date: {{formatDate this.requestDate}}</span>
                    <span class="request-items">Items: {{this.itemNames}}</span>
                    <span class="toggle-details">▼</span>
                </div>
                <div class="request-details hidden">
                    <h3>Request Details</h3>
                    <p><strong>Sales Representative:</strong> {{this.pointPersonName}}</p>
                    
                    <div class="delivery-schedule">
                        <p><strong>Total Deliveries:</strong> {{this.deliveriesCount}}</p>
                    </div>
                    
                    <div class="stage-tracker">
                        <div class="stage">
                            <div class="stage-dot {{#if (eq this.status 'Received')}}active{{/if}}"></div>
                            <div class="stage-label">Received</div>
                        </div>
                        <div class="stage">
                            <div class="stage-dot {{#if (eq this.status 'Negotiation')}}active{{/if}}"></div>
                            <div class="stage-label">Negotiation</div>
                        </div>
                        <div class="stage">
                            <div class="stage-dot {{#if (eq this.status 'Approved')}}active{{/if}}"></div>
                            <div class="stage-label">Approved</div>
                        </div>
                    </div>



                    <div class="request-actions">
                        <button class="contact-sales">Contact Sales</button>
                        <button class="cancel-request">Cancel Request</button>
                        <button class="give-feedback">Give Feedback</button>
                    </div>
                    
                    <p class="contact-note">Contact Sales department for any concerns regarding this request</p>
                </div>
            </div>
            {{/each}}
        </div>

        <div class="total-breakdown">
            <h2>Total Item Breakdown</h2>
            <div id="breakdown-content" class="breakdown-details">
                <div class="request-identifier"></div>
                <div class="delivery-dates"></div>
                <div class="items-breakdown"></div>
                <div class="total-amount"></div>
            </div>
        </div>
    </div>
    {{/if}}
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const requestsData = {{{json requests}}};
        const requestRows = document.querySelectorAll('.request-row');
        const breakdownContent = document.getElementById('breakdown-content');

        requestRows.forEach(row => {
            const summary = row.querySelector('.request-summary');
            const details = row.querySelector('.request-details');
            const toggleIcon = row.querySelector('.toggle-details');

            summary.addEventListener('click', function() {
                details.classList.toggle('hidden');
                toggleIcon.textContent = details.classList.contains('hidden') ? '▼' : '▲';

                const requestId = row.dataset.requestId;
                updateTotalBreakdown(requestId);
            });
        });

        function updateTotalBreakdown(requestId) {
            const request = requestsData.find(req => req.requestID == requestId);

            if (request) {
                // Update request identifier
                const requestIdentifier = document.querySelector('.request-identifier');
                requestIdentifier.innerHTML = `<h3>Request #${request.requestID}</h3>`;

                // Update delivery dates
                const deliveryDates = document.querySelector('.delivery-dates');
                deliveryDates.innerHTML = '<h4>Delivery Schedule:</h4><ul>' +
                    request.deliveryDates.map(date => 
                        `<li>• ${new Date(date).toLocaleDateString()}</li>`
                    ).join('') + '</ul>';

                // Update items breakdown
                const itemsBreakdown = document.querySelector('.items-breakdown');
                let breakdownHTML = '';
                let total = 0;

                request.totalItemsBreakdown.forEach(item => {
                    const itemTotal = item.quantity * item.itemPrice;
                    total += itemTotal;
                    breakdownHTML += `
                        <div>${item.itemName}: ${item.quantity} × $${item.itemPrice.toFixed(2)}</div>
                        <div>$${itemTotal.toFixed(2)}</div>
                    `;
                });

                itemsBreakdown.innerHTML = breakdownHTML;

                // Update total amount
                const totalAmount = document.querySelector('.total-amount');
                totalAmount.innerHTML = `<strong>Total: $${total.toFixed(2)}</strong>`;

                // Show the breakdown
                breakdownContent.style.display = 'block';
            } else {
                breakdownContent.style.display = 'none';
            }
        }
    });
</script>