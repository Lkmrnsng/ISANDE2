    <div class="dashboard-container">
        <div class="sidebar">
            <h2>Main Menu</h2>
            <ul>
                <li><a href="/my-requests" class="active">My Requests</a></li>
                <li><a href="/my-orders">My Orders</a></li>
                <li><a href="/chats">Chats</a></li>
                <li><a href="/cancel-order">Cancel Orders</a></li>
                <li><a href="/account">Account</a></li>
            </ul>
        </div>

        <div class="main-content">
            <h1>Track Your Requests</h1>
            <div class="requests-list">
                {{#each requests}}
                <div class="request-row" data-request-id="{{this.requestID}}">
                    <div class="request-summary">
                        <span class="request-id">Request ID: {{this.requestID}}</span>
                        <span class="request-status">Status: {{this.status}}</span>
                        <span class="request-date">Request Date: {{formatDate this.requestDate}}</span>
                        <span class="request-items">Items: {{this.itemNames}}</span>
                        <span class="toggle-details">▼</span>
                    </div>
                    <div class="request-details hidden">
                        <h3>Request Details</h3>
                        <p><strong>Sales Representative:</strong> {{this.pointPersonName}}</p>
                        <p><strong>Number of Deliveries:</strong> {{this.deliveriesCount}}</p>
                        <p><strong>Delivery Dates:</strong> {{formatDates this.deliveryDates}}</p>
                        
                        <div class="stage-tracker">
                            <div class="stage">
                                <div class="stage-dot {{#if (eq this.status 'Received')}}active{{/if}}"></div>
                                <div class="stage-label">Received</div>
                            </div>
                            <div class="stage">
                                <div class="stage-dot {{#if (eq this.status 'Negotiation')}}active{{/if}}"></div>
                                <div class="stage-label">Negotiation</div>
                            </div>
                            <div class="stage">
                                <div class="stage-dot {{#if (eq this.status 'Approved')}}active{{/if}}"></div>
                                <div class="stage-label">Approved</div>
                            </div>
                        </div>

                        <div class="request-actions">
                            <button class="contact-sales">Contact Sales</button>
                            <button class="cancel-request">Cancel Request</button>
                            <button class="give-feedback">Give Feedback</button>
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>

            <div class="total-breakdown">
                <h2>Total Item Breakdown</h2>
                <p>This is how much the request will cost you in total, after all deliveries are made.</p>
                <div id="breakdown-content">
                    <!-- This will be populated dynamically when a request is selected -->
                </div>
            </div>
        </div>
    </div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const requestsData = {{{json requests}}};  // Embeds the requests array as JSON

        const requestRows = document.querySelectorAll('.request-row');
        const breakdownContent = document.getElementById('breakdown-content');

        requestRows.forEach(row => {
            const summary = row.querySelector('.request-summary');
            const details = row.querySelector('.request-details');
            const toggleIcon = row.querySelector('.toggle-details');

            summary.addEventListener('click', function() {
                details.classList.toggle('hidden');
                toggleIcon.textContent = details.classList.contains('hidden') ? '▼' : '▲';

                // Update the Total Item Breakdown
                const requestId = row.dataset.requestId;
                updateTotalBreakdown(requestId);
            });
        });

        function updateTotalBreakdown(requestId) {
            // Find the request in the requestsData array using the requestId
            const request = requestsData.find(req => req.requestID == requestId);

            if (request) {
                let breakdownHTML = '<ul class="items-list">';
                let total = 0;

                // Loop through the totalItemsBreakdown array to show item details
                request.totalItemsBreakdown.forEach(item => {
                    const itemTotal = item.quantity * item.itemPrice;
                    total += itemTotal;
                    breakdownHTML += `<li>${item.itemName}: ${item.quantity} x $${item.itemPrice.toFixed(2)} = $${itemTotal.toFixed(2)}</li>`;
                });

                breakdownHTML += `</ul><p><strong>Total: $${total.toFixed(2)}</strong></p>`;

                // Display the delivery dates
                request.deliveryDates.forEach(date => {
                    breakdownHTML += `<p class="delivery-date">Delivery on: ${new Date(date).toLocaleDateString()}</p>`;
                });

                breakdownContent.innerHTML = breakdownHTML;
            } else {
                breakdownContent.innerHTML = '<p>No breakdown data available for this request.</p>';
            }
        }
    });
</script>
